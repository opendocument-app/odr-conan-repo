diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5d94d5fc..cba64818 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -2,7 +2,7 @@ project(poppler)
 
 cmake_minimum_required(VERSION 3.1.0 FATAL_ERROR)
 
-set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/modules)
+set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules)
 
 include(PopplerDefaults)
 include(PopplerMacros)
@@ -73,7 +73,7 @@ option(EXTRA_WARN "Enable extra compile warnings" OFF)
 
 set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
 
-set(TESTDATADIR "${CMAKE_SOURCE_DIR}/../test" CACHE STRING "Specify test data dir.")
+set(TESTDATADIR "${CMAKE_CURRENT_SOURCE_DIR}/../test" CACHE STRING "Specify test data dir.")
 if(NOT (EXISTS ${TESTDATADIR} AND EXISTS ${TESTDATADIR}/test-poppler.c))
   message(WARNING "
  No test data found in $testdatadir.
@@ -160,16 +160,16 @@ if (ENABLE_QT5)
   endif()
 endif()
 
-macro_optional_find_package(Cairo ${CAIRO_VERSION})
-if(CAIRO_FOUND)
-  set(HAVE_CAIRO ${CAIRO_FOUND})
+find_package(cairo ${CAIRO_VERSION})
+if(cairo_FOUND)
+  set(HAVE_CAIRO ${cairo_FOUND})
   set(CAIRO_FEATURE "#define POPPLER_HAS_CAIRO 1")
   set(CAIRO_REQ "cairo")
   set(POPPLER_GLIB_DISABLE_DEPRECATED "")
   set(POPPLER_GLIB_DISABLE_SINGLE_INCLUDES "")
   if(ENABLE_GLIB)
-    macro_optional_find_package(GLIB)
-    if(NOT GLIB_FOUND)
+    find_package(glib)
+    if(NOT glib_FOUND)
       set(ENABLE_GLIB OFF)
     endif()
   endif()
@@ -240,7 +240,7 @@ if(MINGW)
 endif()
 if(FONTCONFIG_FOUND)
   add_definitions(${FONTCONFIG_DEFINITIONS})
-  include_directories(SYSTEM ${FONTCONFIG_INCLUDE_DIR})
+  include_directories(SYSTEM ${Fontconfig_INCLUDE_DIR})
 endif()
 if(WITH_FONTCONFIGURATION_WIN32)
   if(MINGW)
@@ -460,12 +460,8 @@ if (ENABLE_NSS3)
   set(poppler_SRCS ${poppler_SRCS}
     poppler/SignatureHandler.cc
   )
-  if(${CMAKE_VERSION} VERSION_LESS "3.6.0")
-    set(poppler_LIBS ${poppler_LIBS} ${NSS3_LIBRARIES})
-    include_directories(SYSTEM ${NSS3_INCLUDE_DIRS})
-  else()
-    set(poppler_LIBS ${poppler_LIBS} PkgConfig::NSS3)
-  endif()
+  set(poppler_LIBS ${poppler_LIBS} ${NSS3_LIBRARIES})
+  include_directories(SYSTEM ${NSS3_INCLUDE_DIRS})
 endif()
 if (OpenJPEG_FOUND)
   set(poppler_SRCS ${poppler_SRCS}
@@ -713,7 +709,7 @@ endif()
 if(ENABLE_GLIB)
   add_subdirectory(glib)
 endif()
-add_subdirectory(test)
+#add_subdirectory(test)
 if(ENABLE_QT5)
   add_subdirectory(qt5)
 endif()
@@ -809,9 +805,9 @@ endif()
 set(ARCHIVE_NAME ${CMAKE_PROJECT_NAME}-${POPPLER_VERSION})
 add_custom_target(dist
     COMMAND
-        COMMAND git log --stat | fmt --split-only > ${CMAKE_BINARY_DIR}/ChangeLog
-        COMMAND git archive --prefix=${ARCHIVE_NAME}/ HEAD > ${CMAKE_BINARY_DIR}/${ARCHIVE_NAME}.tar
-        COMMAND tar -C ${CMAKE_BINARY_DIR} -rf ${CMAKE_BINARY_DIR}/${ARCHIVE_NAME}.tar ChangeLog --transform='s,,${ARCHIVE_NAME}/,' --owner root:0 --group root:0
-        COMMAND tar -C ${CMAKE_BINARY_DIR} -rf ${CMAKE_BINARY_DIR}/${ARCHIVE_NAME}.tar glib/reference/html --transform='s,,${ARCHIVE_NAME}/,' --owner root:0 --group root:0
-        COMMAND xz -9 ${CMAKE_BINARY_DIR}/${ARCHIVE_NAME}.tar
-    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
+        COMMAND git log --stat | fmt --split-only > ${CMAKE_CURRENT_BINARY_DIR}/ChangeLog
+        COMMAND git archive --prefix=${ARCHIVE_NAME}/ HEAD > ${CMAKE_CURRENT_BINARY_DIR}/${ARCHIVE_NAME}.tar
+        COMMAND tar -C ${CMAKE_CURRENT_BINARY_DIR} -rf ${CMAKE_CURRENT_BINARY_DIR}/${ARCHIVE_NAME}.tar ChangeLog --transform='s,,${ARCHIVE_NAME}/,' --owner root:0 --group root:0
+        COMMAND tar -C ${CMAKE_CURRENT_BINARY_DIR} -rf ${CMAKE_CURRENT_BINARY_DIR}/${ARCHIVE_NAME}.tar glib/reference/html --transform='s,,${ARCHIVE_NAME}/,' --owner root:0 --group root:0
+        COMMAND xz -9 ${CMAKE_CURRENT_BINARY_DIR}/${ARCHIVE_NAME}.tar
+    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
diff --git a/cmake/modules/FindCairo.cmake b/cmake/modules/FindCairo.cmake
deleted file mode 100644
index d536c051..00000000
--- a/cmake/modules/FindCairo.cmake
+++ /dev/null
@@ -1,62 +0,0 @@
-# - try to find Cairo
-# Once done this will define
-#
-#  CAIRO_FOUND - system has Cairo
-#  CAIRO_CFLAGS - the Cairo CFlags
-#  CAIRO_INCLUDE_DIRS - the Cairo include directories
-#  CAIRO_LIBRARIES - Link these to use Cairo
-#
-# Copyright (C) 2007, 2010, Pino Toscano, <pino@kde.org>
-#
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-
-if(CAIRO_INCLUDE_DIRS AND CAIRO_LIBRARIES)
-
-  # in cache already
-  set(CAIRO_FOUND TRUE)
-
-else(CAIRO_INCLUDE_DIRS AND CAIRO_LIBRARIES)
-
-if(NOT WIN32)
-  # use pkg-config to get the directories and then use these values
-  # in the FIND_PATH() and FIND_LIBRARY() calls
-  find_package(PkgConfig REQUIRED)
-  if(Cairo_FIND_VERSION_COUNT GREATER 0)
-    set(_cairo_version_cmp ">=${Cairo_FIND_VERSION}")
-  endif(Cairo_FIND_VERSION_COUNT GREATER 0)
-  pkg_check_modules(_pc_cairo cairo${_cairo_version_cmp})
-  if(_pc_cairo_FOUND)
-    set(CAIRO_FOUND TRUE)
-  endif(_pc_cairo_FOUND)
-else(NOT WIN32)
-  # assume so, for now
-  set(CAIRO_FOUND TRUE)
-endif(NOT WIN32)
-
-if(CAIRO_FOUND)
-  # set it back as false
-  set(CAIRO_FOUND FALSE)
-
-  find_library(CAIRO_LIBRARY cairo
-               HINTS ${_pc_cairo_LIBRARY_DIRS}
-  )
-  set(CAIRO_LIBRARIES "${CAIRO_LIBRARY}")
-
-  find_path(CAIRO_INCLUDE_DIR cairo.h
-            HINTS ${_pc_cairo_INCLUDE_DIRS}
-            PATH_SUFFIXES cairo
-  )
-  set(CAIRO_INCLUDE_DIRS "${CAIRO_INCLUDE_DIR}")
-
-  include(FindPackageHandleStandardArgs)
-  find_package_handle_standard_args(Cairo DEFAULT_MSG CAIRO_LIBRARIES CAIRO_INCLUDE_DIRS)
-endif(CAIRO_FOUND)
-
-endif(CAIRO_INCLUDE_DIRS AND CAIRO_LIBRARIES)
-
-mark_as_advanced(
-  CAIRO_CFLAGS
-  CAIRO_INCLUDE_DIRS
-  CAIRO_LIBRARIES
-)
diff --git a/cmake/modules/FindFontconfig.cmake b/cmake/modules/FindFontconfig.cmake
deleted file mode 100644
index 268a61ae..00000000
--- a/cmake/modules/FindFontconfig.cmake
+++ /dev/null
@@ -1,50 +0,0 @@
-# - Try to find the  Fontconfig
-# Once done this will define
-#
-#  FONTCONFIG_FOUND - system has Fontconfig
-#  FONTCONFIG_INCLUDE_DIR - The include directory to use for the fontconfig headers
-#  FONTCONFIG_LIBRARIES - Link these to use FONTCONFIG
-#  FONTCONFIG_DEFINITIONS - Compiler switches required for using FONTCONFIG
-
-# Copyright (c) 2006,2007 Laurent Montel, <montel@kde.org>
-#
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-
-
-if (FONTCONFIG_LIBRARIES AND FONTCONFIG_INCLUDE_DIR)
-
-  # in cache already
-  set(FONTCONFIG_FOUND TRUE)
-
-else (FONTCONFIG_LIBRARIES AND FONTCONFIG_INCLUDE_DIR)
-
-  if (NOT WIN32)
-    # use pkg-config to get the directories and then use these values
-    # in the FIND_PATH() and FIND_LIBRARY() calls
-    find_package(PkgConfig)
-    pkg_check_modules(PC_FONTCONFIG fontconfig)
-
-    set(FONTCONFIG_DEFINITIONS ${PC_FONTCONFIG_CFLAGS_OTHER})
-  endif (NOT WIN32)
-
-  find_path(FONTCONFIG_INCLUDE_DIR fontconfig/fontconfig.h
-    PATHS
-    ${PC_FONTCONFIG_INCLUDEDIR}
-    ${PC_FONTCONFIG_INCLUDE_DIRS}
-    /usr/X11/include
-  )
-
-  find_library(FONTCONFIG_LIBRARIES NAMES fontconfig
-    PATHS
-    ${PC_FONTCONFIG_LIBDIR}
-    ${PC_FONTCONFIG_LIBRARY_DIRS}
-  )
-
-  include(FindPackageHandleStandardArgs)
-  FIND_PACKAGE_HANDLE_STANDARD_ARGS(Fontconfig DEFAULT_MSG FONTCONFIG_LIBRARIES FONTCONFIG_INCLUDE_DIR )
-  
-  mark_as_advanced(FONTCONFIG_LIBRARIES FONTCONFIG_INCLUDE_DIR)
-
-endif (FONTCONFIG_LIBRARIES AND FONTCONFIG_INCLUDE_DIR)
-
diff --git a/cmake/modules/FindGLIB.cmake b/cmake/modules/FindGLIB.cmake
deleted file mode 100644
index 68efd347..00000000
--- a/cmake/modules/FindGLIB.cmake
+++ /dev/null
@@ -1,24 +0,0 @@
-# - try to find the GLIB libraries
-# Once done this will define
-#
-#  GLIB_FOUND - system has GLib
-#  GLIB2_CFLAGS - the GLib CFlags
-#  GLIB2_LIBRARIES - Link these to use GLib
-#
-# Copyright 2008-2010 Pino Toscano, <pino@kde.org>
-# Copyright 2013 Michael Weiser, <michael@weiser.dinsnail.net>
-#
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-
-include(FindPackageHandleStandardArgs)
-
-find_package(PkgConfig REQUIRED)
-
-if(${CMAKE_VERSION} VERSION_LESS "3.6.0")
-    pkg_check_modules(GLIB2 "glib-2.0>=${GLIB_REQUIRED}" "gobject-2.0>=${GLIB_REQUIRED}" "gio-2.0>=${GLIB_REQUIRED}")
-else()
-    pkg_check_modules(GLIB2 IMPORTED_TARGET "glib-2.0>=${GLIB_REQUIRED}" "gobject-2.0>=${GLIB_REQUIRED}" "gio-2.0>=${GLIB_REQUIRED}")
-endif()
-
-find_package_handle_standard_args(GLib DEFAULT_MSG GLIB2_LIBRARIES GLIB2_CFLAGS)
diff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt
index 5d351979..37d03876 100644
--- a/cpp/CMakeLists.txt
+++ b/cpp/CMakeLists.txt
@@ -6,7 +6,7 @@ include_directories(
 
 configure_file(poppler-version.h.in ${CMAKE_CURRENT_BINARY_DIR}/poppler-version.h @ONLY)
 
-add_subdirectory(tests)
+#add_subdirectory(tests)
 
 set(poppler_cpp_SRCS
   poppler-destination.cpp
diff --git a/cpp/tests/CMakeLists.txt b/cpp/tests/CMakeLists.txt
index f5be4213..74e568c8 100644
--- a/cpp/tests/CMakeLists.txt
+++ b/cpp/tests/CMakeLists.txt
@@ -2,7 +2,7 @@ include_directories(
   ${CMAKE_CURRENT_SOURCE_DIR}
   ${CMAKE_CURRENT_SOURCE_DIR}/..
   ${CMAKE_CURRENT_BINARY_DIR}/..
-  ${CMAKE_SOURCE_DIR}/utils
+  ${CMAKE_CURRENT_SOURCE_DIR}/utils
 )
 
 macro(CPP_ADD_SIMPLETEST exe)
@@ -17,8 +17,8 @@ macro(CPP_ADD_SIMPLETEST exe)
   endif()
 endmacro(CPP_ADD_SIMPLETEST)
 
-cpp_add_simpletest(poppler-dump poppler-dump.cpp ${CMAKE_SOURCE_DIR}/utils/parseargs.cc)
-cpp_add_simpletest(poppler-render poppler-render.cpp ${CMAKE_SOURCE_DIR}/utils/parseargs.cc)
+cpp_add_simpletest(poppler-dump poppler-dump.cpp ${CMAKE_CURRENT_SOURCE_DIR}/utils/parseargs.cc)
+cpp_add_simpletest(poppler-render poppler-render.cpp ${CMAKE_CURRENT_SOURCE_DIR}/utils/parseargs.cc)
 
 if(ENABLE_FUZZER)
   cpp_add_simpletest(pdf_fuzzer pdf_fuzzer.cc)
diff --git a/glib/CMakeLists.txt b/glib/CMakeLists.txt
index a368eded..87469a81 100644
--- a/glib/CMakeLists.txt
+++ b/glib/CMakeLists.txt
@@ -5,13 +5,13 @@ include_directories(
 
 include_directories(
   SYSTEM
-  ${GLIB2_INCLUDE_DIRS}
-  ${CAIRO_INCLUDE_DIRS}
+  ${glib_INCLUDE_DIRS}
+  ${cairo_INCLUDE_DIRS}
 )
 add_definitions(
   -DG_LOG_DOMAIN=\"Poppler\"
-  ${GLIB2_CFLAGS_OTHER}
-  ${CAIRO_CFLAGS}
+  ${glib_CFLAGS_OTHER}
+  ${cairo_CFLAGS}
   ${POPPLER_GLIB_DISABLE_DEPRECATED}
   ${POPPLER_GLIB_DISABLE_SINGLE_INCLUDES}
 )
@@ -39,11 +39,11 @@ set(poppler_glib_public_headers
   poppler-structure-element.h
 )
 
-find_program(GLIB2_MKENUMS glib-mkenums)
+find_program(glib_MKENUMS glib-mkenums)
 
 add_custom_command(
   OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/poppler-enums.h
-  COMMAND ${GLIB2_MKENUMS}
+  COMMAND ${glib_MKENUMS}
   ARGS
     --template poppler-enums.h.template
     ${poppler_glib_public_headers} > ${CMAKE_CURRENT_BINARY_DIR}/poppler-enums.h
@@ -54,7 +54,7 @@ add_custom_command(
 
 add_custom_command(
   OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/poppler-enums.c
-  COMMAND ${GLIB2_MKENUMS}
+  COMMAND ${glib_MKENUMS}
   ARGS
     --template poppler-enums.c.template
     ${poppler_glib_public_headers} > ${CMAKE_CURRENT_BINARY_DIR}/poppler-enums.c
@@ -82,9 +82,9 @@ set(poppler_glib_SRCS
 )
 set(poppler_glib_generated_SRCS
   ${CMAKE_CURRENT_BINARY_DIR}/poppler-enums.c
-  ${CMAKE_SOURCE_DIR}/poppler/CairoFontEngine.cc
-  ${CMAKE_SOURCE_DIR}/poppler/CairoOutputDev.cc
-  ${CMAKE_SOURCE_DIR}/poppler/CairoRescaleBox.cc
+  ${PROJECT_SOURCE_DIR}/poppler/CairoFontEngine.cc
+  ${PROJECT_SOURCE_DIR}/poppler/CairoOutputDev.cc
+  ${PROJECT_SOURCE_DIR}/poppler/CairoRescaleBox.cc
 )
 add_library(poppler-glib ${poppler_glib_SRCS} ${poppler_glib_generated_SRCS})
 set_target_properties(poppler-glib PROPERTIES VERSION 8.17.0 SOVERSION 8)
@@ -95,11 +95,7 @@ if(MINGW AND BUILD_SHARED_LIBS)
     get_target_property(POPPLER_GLIB_SOVERSION poppler-glib SOVERSION)
     set_target_properties(poppler-glib PROPERTIES SUFFIX "-${POPPLER_GLIB_SOVERSION}${CMAKE_SHARED_LIBRARY_SUFFIX}")
 endif()
-if(${CMAKE_VERSION} VERSION_LESS "3.6.0")
-    target_link_libraries(poppler-glib poppler ${GLIB2_LIBRARIES} ${CAIRO_LIBRARIES} ${FREETYPE_LIBRARIES})
-else()
-    target_link_libraries(poppler-glib poppler PkgConfig::GLIB2 ${CAIRO_LIBRARIES} ${FREETYPE_LIBRARIES})
-endif()
+target_link_libraries(poppler-glib poppler ${glib_LIBRARIES} ${cairo_LIBRARIES} ${FREETYPE_LIBRARIES})
 if(CMAKE_USE_PTHREADS_INIT)
    target_link_libraries(poppler-glib Threads::Threads)
 endif()
@@ -135,7 +131,7 @@ if (HAVE_INTROSPECTION AND BUILD_SHARED_LIBS)
   set(Poppler_0_18_gir_INCLUDES GObject-2.0 Gio-2.0 cairo-1.0)
   get_directory_property(_tmp_includes INCLUDE_DIRECTORIES)
   _list_prefix(_includes _tmp_includes "-I")
-  set(Poppler_0_18_gir_CFLAGS ${_includes} -L${CMAKE_BINARY_DIR} -L${CMAKE_CURRENT_BINARY_DIR})
+  set(Poppler_0_18_gir_CFLAGS ${_includes} -L${CMAKE_CURRENT_BINARY_DIR} -L${CMAKE_CURRENT_BINARY_DIR})
   set(Poppler_0_18_gir_LIBS poppler-glib poppler)
   _list_prefix(_abs_introspection_files introspection_files "${CMAKE_CURRENT_SOURCE_DIR}/")
   list(APPEND _abs_introspection_files
diff --git a/glib/reference/CMakeLists.txt b/glib/reference/CMakeLists.txt
index 15515406..39c59201 100644
--- a/glib/reference/CMakeLists.txt
+++ b/glib/reference/CMakeLists.txt
@@ -1,7 +1,7 @@
 add_custom_command(
   OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/glib-docs-build.stamp
   DEPENDS poppler-glib
-  COMMAND ${CMAKE_SOURCE_DIR}/make-glib-api-docs --src-dir=${CMAKE_SOURCE_DIR} --build-dir=${CMAKE_BINARY_DIR}
+  COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/make-glib-api-docs --src-dir=${CMAKE_CURRENT_SOURCE_DIR} --build-dir=${CMAKE_CURRENT_BINARY_DIR}
   COMMAND touch ${CMAKE_CURRENT_BINARY_DIR}/glib-docs-build.stamp
 )
 
diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index 09b2e67a..a32f7e0e 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -23,8 +23,8 @@ if (GTK_FOUND)
   )
 
   include_directories(
-    ${CMAKE_SOURCE_DIR}/glib
-    ${CMAKE_BINARY_DIR}/glib
+    ${CMAKE_CURRENT_SOURCE_DIR}/glib
+    ${CMAKE_CURRENT_BINARY_DIR}/glib
   )
 
   set (gtk_splash_test_SRCS
@@ -37,9 +37,9 @@ if (GTK_FOUND)
 
     set (pdf_inspector_SRCS
       pdf-inspector.cc
-      ${CMAKE_SOURCE_DIR}/poppler/CairoFontEngine.cc
-      ${CMAKE_SOURCE_DIR}/poppler/CairoOutputDev.cc
-      ${CMAKE_SOURCE_DIR}/poppler/CairoRescaleBox.cc
+      ${CMAKE_CURRENT_SOURCE_DIR}/poppler/CairoFontEngine.cc
+      ${CMAKE_CURRENT_SOURCE_DIR}/poppler/CairoOutputDev.cc
+      ${CMAKE_CURRENT_SOURCE_DIR}/poppler/CairoRescaleBox.cc
     )
     poppler_add_test(pdf-inspector BUILD_GTK_TESTS ${pdf_inspector_SRCS})
     target_link_libraries(pdf-inspector ${CAIRO_LIBRARIES} ${FREETYPE_LIBRARIES} ${common_libs} ${GTK3_LIBRARIES} poppler)
diff --git a/utils/CMakeLists.txt b/utils/CMakeLists.txt
index 80f54245..9bd130e6 100644
--- a/utils/CMakeLists.txt
+++ b/utils/CMakeLists.txt
@@ -23,9 +23,9 @@ if (HAVE_CAIRO)
   set(pdftocairo_SOURCES ${common_srcs}
     pdftocairo.cc
     pdftocairo-win32.cc
-    ${CMAKE_SOURCE_DIR}/poppler/CairoFontEngine.cc
-    ${CMAKE_SOURCE_DIR}/poppler/CairoOutputDev.cc
-    ${CMAKE_SOURCE_DIR}/poppler/CairoRescaleBox.cc
+    ${CMAKE_CURRENT_SOURCE_DIR}/poppler/CairoFontEngine.cc
+    ${CMAKE_CURRENT_SOURCE_DIR}/poppler/CairoOutputDev.cc
+    ${CMAKE_CURRENT_SOURCE_DIR}/poppler/CairoRescaleBox.cc
   )
   include_directories(
     ${CMAKE_CURRENT_SOURCE_DIR}
